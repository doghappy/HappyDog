@model HappyDog.Domain.DataTransferObjects.Article.EditArticleDto
@{
    ViewData["Title"] = "编辑:" + Model.Title;
    var categories = (List<HappyDog.Domain.Entities.Category>)ViewBag.Categories;
}

<div class="container body-content">
    <h2 class="mt-4">编辑：@Model.Title</h2>
    @using (Html.BeginForm(FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div class="form-group">
            @Html.LabelFor(m => m.Title)
            @Html.TextBoxFor(m => m.Title, new { @class = "form-control", autofocus = "autofocus" })
            @Html.ValidationMessageFor(m => m.Title, null, new { @class = "text-danger validation-message" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Content)
            @Html.TextAreaFor(m => m.Content, new { @class = "form-control", style = "height:24rem" })
            @Html.ValidationMessageFor(m => m.Content, null, new { @class = "text-danger validation-message" })
        </div>
        <div class="form-group col-md-3" style="padding:0">
            @Html.LabelFor(m => m.CategoryId, "分类")
            @Html.DropDownListFor(m => m.CategoryId, new SelectList(categories, "Id", "Label"), new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CategoryId, null, new { @class = "text-danger validation-message" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.State, "状态")
            @Html.RadioButtonFor(m => m.State, "Disable", new { @id = "disable", style = "margin-left:12px" })
            @Html.Label("disable", "隐藏")
            @Html.RadioButtonFor(m => m.State, "Enable", new { @id = "enable" })
            @Html.Label("enable", "显示")
        </div>
        <p class="text-danger validation-message">@ViewBag.Message</p>
        <button class="btn btn-primary">
            <i class="fa fa-check" aria-hidden="true"></i>
            更新
        </button>
    }
</div>